package net.viperfish.propertyManager.property;

import java.util.List;

import javax.persistence.EntityManager;
import javax.persistence.NoResultException;
import javax.persistence.PersistenceContext;

import org.springframework.stereotype.Repository;
import org.springframework.transaction.annotation.Transactional;

@Repository
public class PropertyDaoImpl implements PropertyDAO {

	@PersistenceContext
	EntityManager entityManager;

	public PropertyDaoImpl() {
		// TODO Auto-generated constructor stub
	}

	@Transactional
	@Override
	public Property get(Long key) {
		Property p;
		try {
			p = this.entityManager
					.createQuery("SELECT p FROM Property p Where p.id = :id",
							Property.class).setParameter("id", key)
					.getSingleResult();
		} catch (NoResultException e) {
			p = null;
		}
		return p;
	}

	@Transactional
	@Override
	public Property put(Property data) {
		this.entityManager.persist(data);
		return data;
	}

	@Transactional
	@Override
	public Property update(Property data) {
		this.entityManager.merge(data);
		return data;
	}

	@Transactional
	@Override
	public Property remove(Long key) {
		Property old = this.get(key);
		if(old == null){
			
		}
		entityManager. createQuery("DELETE FROM Property p WHERE p.id = :id")
				.setParameter("id", key).executeUpdate();
		return old;
	}

	@Transactional
	@Override
	public List<Property> keywordSearch(String keyword) {
		List<Property> p = this.entityManager
				.createQuery(
						"SELECT p FROM Property p WHERE p.name LIKE :name",
						Property.class)
				.setParameter("name", "%" + keyword + "%").getResultList();
		return p;
	}

	@Transactional
	@Override
	public Iterable<Property> getAll() {
		// TODO Auto-generated method stub
		return this.entityManager.createQuery(
				"SELECT p FROM Property p ORDER BY p.name", Property.class)
				.getResultList();
	}
}
