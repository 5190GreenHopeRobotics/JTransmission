<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.5"/>
<title>Arduino Transmission Protocol: transmission.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Arduino Transmission Protocol
   &#160;<span id="projectnumber">git.adb34ee</span>
   </div>
   <div id="projectbrief">a protocol to transmit data between arduino and roborio</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.5 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
      <li><a href="annotated.html"><span>Classes</span></a></li>
      <li class="current"><a href="files.html"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.html"><span>File&#160;List</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Functions</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">transmission.h</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * transmission.h</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> *  Created on: Jul 10, 2015</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *      Author: sdai</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;</div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="preprocessor">#ifndef TRANSMISSION_H_</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define TRANSMISSION_H_</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#include &quot;utils/vector.h&quot;</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="preprocessor">#ifndef nullptr</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define nullptr 0</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00019"></a><span class="lineno"><a class="line" href="classtransmissionData.html">   19</a></span>&#160;<span class="keyword">class </span><a class="code" href="classtransmissionData.html">transmissionData</a> {</div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;    <span class="keyword">virtual</span> <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>* <a class="code" href="classtransmissionData.html#a25e718e751a2f781d15f2c7488a5bc07">toPacket</a>() = 0;</div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;    <span class="keyword">virtual</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> <a class="code" href="classtransmissionData.html#a4fc9dc1efe482dbf3bf8cbda2137a3d8">getLength</a>() <span class="keyword">const</span> = 0;</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;    <span class="keyword">virtual</span> <a class="code" href="classtransmissionData.html#aa55e32f366c4274bcd40fd8e6741ad96">~transmissionData</a>();</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;};</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;</div>
<div class="line"><a name="l00041"></a><span class="lineno"><a class="line" href="classtransmissionPacket.html">   41</a></span>&#160;<span class="keyword">class </span><a class="code" href="classtransmissionPacket.html">transmissionPacket</a> {</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="keyword">protected</span>:</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> messageType;</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> messageLength;</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>* messageData;</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    <a class="code" href="classtransmissionPacket.html#a3d09ff438c9445ecd4ec34da09d7d0ab">transmissionPacket</a>();</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    <a class="code" href="classtransmissionPacket.html#a3d09ff438c9445ecd4ec34da09d7d0ab">transmissionPacket</a>(<span class="keyword">const</span> <a class="code" href="classtransmissionPacket.html">transmissionPacket</a>&amp; src);</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    <a class="code" href="classtransmissionPacket.html#a351e609577ac9baaa5c04bd5bb815ee5">~transmissionPacket</a>();</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    <a class="code" href="classtransmissionPacket.html">transmissionPacket</a>&amp; <a class="code" href="classtransmissionPacket.html#aa4a40b8255162e01bd5f8e187a615984">operator =</a>(<span class="keyword">const</span> <a class="code" href="classtransmissionPacket.html">transmissionPacket</a>&amp; src);</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classtransmissionPacket.html#aaf57e80cee2a9a6632f21bec6e791617">setMessageType</a>(<span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> t);</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> <a class="code" href="classtransmissionPacket.html#a1b2b7b416601545c898b8ca6fec4fbb2">getMessageType</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classtransmissionPacket.html#addb25c2a8297115224d3b229e558c7a4">setData</a>(<a class="code" href="classtransmissionData.html">transmissionData</a>&amp; data);</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classtransmissionPacket.html#aa4dd4a99956e6a3078d19bdca005e4b3">setMessageLength</a>(<span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> length);</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> <a class="code" href="classtransmissionPacket.html#a2bac62071baef91a910f71292119f944">getLength</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classtransmissionPacket.html#addb25c2a8297115224d3b229e558c7a4">setData</a>(<span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>* data);</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>* <a class="code" href="classtransmissionPacket.html#aa045bdb41e7aa7f79f95f71e531867ce">getData</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>* <a class="code" href="classtransmissionPacket.html#a4ea135da255bde628ed9d767850308da">toPacket</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;};</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;</div>
<div class="line"><a name="l00118"></a><span class="lineno"><a class="line" href="classkeepStateData.html">  118</a></span>&#160;<span class="keyword">class </span><a class="code" href="classkeepStateData.html">keepStateData</a>: <span class="keyword">public</span> <a class="code" href="classtransmissionData.html">transmissionData</a> {</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;<span class="keyword">protected</span>:</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> state;</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> sequence;</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;    <a class="code" href="classkeepStateData.html#a97b2505d968f9ad8a36ccd821cb17380">keepStateData</a>();</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;    <a class="code" href="classkeepStateData.html#a97b2505d968f9ad8a36ccd821cb17380">keepStateData</a>(<span class="keyword">const</span> <a class="code" href="classkeepStateData.html">keepStateData</a>&amp; src);</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;    <a class="code" href="classkeepStateData.html">keepStateData</a>&amp; <a class="code" href="classkeepStateData.html#a9ead812a2543c35f36c3c35af4aabe75">operator =</a>(<span class="keyword">const</span> <a class="code" href="classkeepStateData.html">keepStateData</a>&amp; src);</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classkeepStateData.html#ad90d41e7caa04816ec18d4055fb830f8">operator ==</a>(<span class="keyword">const</span> <a class="code" href="classkeepStateData.html">keepStateData</a>&amp; src);</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classkeepStateData.html#a67fab4cc21ddb47be8410d29d84f9c36">setState</a>(<span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> state);</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> <a class="code" href="classkeepStateData.html#ab20abe620e85e78a7efebacdb2ba7b74">getState</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classkeepStateData.html#acff5898677f0bc2c6dd3b2e52fc1af28">setSequence</a>(<span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> sequence);</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> <a class="code" href="classkeepStateData.html#ae82574aa79079018c68423ceba1b0ebe">getSequence</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>* <a class="code" href="classkeepStateData.html#ac56b710feb9018b857064081d6605526">toPacket</a>();</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> <a class="code" href="classkeepStateData.html#a5e777ed84928e6dcdbb508732ef4284a">getLength</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;};</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;</div>
<div class="line"><a name="l00180"></a><span class="lineno"><a class="line" href="classcommandData.html">  180</a></span>&#160;<span class="keyword">class </span><a class="code" href="classcommandData.html">commandData</a>: <span class="keyword">public</span> <a class="code" href="classtransmissionData.html">transmissionData</a> {</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;<span class="keyword">protected</span>:</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> command;</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> param;</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;    <a class="code" href="classcommandData.html#aacca8b4fd00b3da4e0ecf7497aaea2a8">commandData</a>();</div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;    <a class="code" href="classcommandData.html#aacca8b4fd00b3da4e0ecf7497aaea2a8">commandData</a>(<span class="keyword">const</span> <a class="code" href="classcommandData.html">commandData</a>&amp; src);</div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;    <a class="code" href="classcommandData.html">commandData</a>&amp; <a class="code" href="classcommandData.html#a2228dd04ac097ddaa8ff8f3d9bf4fedd">operator =</a>(<span class="keyword">const</span> <a class="code" href="classcommandData.html">commandData</a>&amp; src);</div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classcommandData.html#affd38cebd2bfe2485aecf552201d810e">operator ==</a>(<span class="keyword">const</span> <a class="code" href="classcommandData.html">commandData</a>&amp; src);</div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classcommandData.html#ad005bd06513576028c35abcce0b8b259">setCommand</a>(<span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> command);</div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> <a class="code" href="classcommandData.html#a24cb5a2d0e8b0212142d0c6e8469d2c4">getCommand</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classcommandData.html#ae85e0bef520a7111cf744e9524b493bd">setParameter</a>(<span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> param);</div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> <a class="code" href="classcommandData.html#a053044a9996f03e001125ea479b32ec5">getParameter</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>* <a class="code" href="classcommandData.html#a6534c472a44fe8ff787ea3772d9bab11">toPacket</a>();</div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> <a class="code" href="classcommandData.html#aa898fb11788690c24d9f0cde8aa8ab1a">getLength</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;};</div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;</div>
<div class="line"><a name="l00241"></a><span class="lineno"><a class="line" href="structsensorInfo.html">  241</a></span>&#160;<span class="keyword">typedef</span> <span class="keyword">struct </span>{</div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> id;</div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> stat;</div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> reading;</div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;} <a class="code" href="structsensorInfo.html">sensorInfo</a>;</div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;</div>
<div class="line"><a name="l00252"></a><span class="lineno"><a class="line" href="classsensorData.html">  252</a></span>&#160;<span class="keyword">class </span><a class="code" href="classsensorData.html">sensorData</a>: <span class="keyword">public</span> <a class="code" href="classtransmissionData.html">transmissionData</a> {</div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;<span class="keyword">protected</span>:</div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">int</span> block;</div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;    <span class="keywordtype">int</span> capacity;</div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;    <span class="keywordtype">int</span> current;</div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> arduinoStat;</div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> sensorNum;</div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;    <a class="code" href="structsensorInfo.html">sensorInfo</a>* sensors;</div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;    <span class="keywordtype">bool</span> cmpSensorData(<span class="keyword">const</span> <a class="code" href="structsensorInfo.html">sensorInfo</a>* src, <span class="keyword">const</span> <a class="code" href="structsensorInfo.html">sensorInfo</a>* data);</div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;    <span class="keywordtype">void</span> cpSensorData(<a class="code" href="structsensorInfo.html">sensorInfo</a>* src, <span class="keyword">const</span> <a class="code" href="structsensorInfo.html">sensorInfo</a>* data);</div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;    <span class="keywordtype">void</span> relocate();</div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;    <a class="code" href="classsensorData.html#a43ea2bc62a61d8a87efa5084222b6f94">sensorData</a>();</div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;    <a class="code" href="classsensorData.html#a43ea2bc62a61d8a87efa5084222b6f94">sensorData</a>(<span class="keyword">const</span> <a class="code" href="classsensorData.html">sensorData</a>&amp; data);</div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;    <a class="code" href="classsensorData.html">sensorData</a>&amp; <a class="code" href="classsensorData.html#a6b5e8d1467b390fd41a707667ec28bf2">operator=</a>(<span class="keyword">const</span> <a class="code" href="classsensorData.html">sensorData</a>&amp; src);</div>
<div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classsensorData.html#aacea3e817ae9b69b635271562fa483da">operator ==</a>(<span class="keyword">const</span> <a class="code" href="classsensorData.html">sensorData</a>&amp; src);</div>
<div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classsensorData.html#af95f327facc5ffdb04ec2a6f7488a4a8">setArduinoStat</a>(<span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> stat);</div>
<div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> <a class="code" href="classsensorData.html#aebe763d26ab02c01e5b7eb3f9a35c8eb">getArduinoStat</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> <a class="code" href="classsensorData.html#aab2d3c517b2130b076f1bff605b074a4">getSensorNum</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classsensorData.html#a6cdb280bf5743c694249d69ee831f3d4">addSensor</a>(<span class="keyword">const</span> <a class="code" href="structsensorInfo.html">sensorInfo</a>&amp; data);</div>
<div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;    <span class="keyword">const</span> <a class="code" href="structsensorInfo.html">sensorInfo</a>* <a class="code" href="classsensorData.html#a9ccb58cc800a598c3d10e09550d3e1df">getSensors</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>* <a class="code" href="classsensorData.html#af0b04d0861972b8fe829850374f20f00">toPacket</a>();</div>
<div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> <a class="code" href="classsensorData.html#af7cfb2850123ed74e8ec38e3c7a36c80">getLength</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;    <a class="code" href="classsensorData.html#aa41c2fb97e25f2e8476cbee6b728abca">~sensorData</a>();</div>
<div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;};</div>
<div class="line"><a name="l00323"></a><span class="lineno"><a class="line" href="classinterpreter.html">  323</a></span>&#160;<span class="keyword">class </span><a class="code" href="classinterpreter.html">interpreter</a> {</div>
<div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;<span class="keyword">static</span> <a class="code" href="classkeepStateData.html">keepStateData</a> <a class="code" href="classinterpreter.html#a19de2dbbdff62b94424310f49e952ba3">interpretStatSeq</a>(<span class="keyword">const</span> <a class="code" href="classtransmissionPacket.html">transmissionPacket</a>&amp; tp);</div>
<div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;<span class="keyword">static</span> <a class="code" href="classsensorData.html">sensorData</a> <a class="code" href="classinterpreter.html#ac515fd65121fb1fad75704d722e40d1e">interpretSensData</a>(<span class="keyword">const</span> <a class="code" href="classtransmissionPacket.html">transmissionPacket</a>&amp; tp);</div>
<div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;<span class="keyword">static</span> <a class="code" href="classcommandData.html">commandData</a> <a class="code" href="classinterpreter.html#a110be33f28724855a75f274e45618276">interpretCommandData</a>(<span class="keyword">const</span> <a class="code" href="classtransmissionPacket.html">transmissionPacket</a>&amp; tp);</div>
<div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;};</div>
<div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;</div>
<div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;</div>
<div class="line"><a name="l00346"></a><span class="lineno"><a class="line" href="classpacketBuffer.html">  346</a></span>&#160;<span class="keyword">class </span><a class="code" href="classpacketBuffer.html">packetBuffer</a> {</div>
<div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;<span class="keyword">protected</span>:</div>
<div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;    frc5190::vector&lt;unsigned char&gt; buf;</div>
<div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;    <a class="code" href="classtransmissionPacket.html">transmissionPacket</a> <a class="code" href="classpacketBuffer.html#a0b809917ab3a8c67c32c2c3748afd865">interpretRawData</a>(<span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>* packet);</div>
<div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>* getNext();</div>
<div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;    <span class="keywordtype">void</span> addByte(<span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> b);</div>
<div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;    frc5190::vector&lt;transmissionPacket&gt; getPackets();</div>
<div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;};</div>
<div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;</div>
<div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* TRANSMISSION_H_ */</span><span class="preprocessor"></span></div>
<div class="ttc" id="classtransmissionData_html_a25e718e751a2f781d15f2c7488a5bc07"><div class="ttname"><a href="classtransmissionData.html#a25e718e751a2f781d15f2c7488a5bc07">transmissionData::toPacket</a></div><div class="ttdeci">virtual const unsigned char * toPacket()=0</div><div class="ttdoc">a function that flattens this object to raw byte, user should free the returned pointer to avoid memo...</div></div>
<div class="ttc" id="structsensorInfo_html"><div class="ttname"><a href="structsensorInfo.html">sensorInfo</a></div><div class="ttdoc">the sensor data the sensor data which goes in sensorData datagram </div><div class="ttdef"><b>Definition:</b> transmission.h:241</div></div>
<div class="ttc" id="classkeepStateData_html_ab20abe620e85e78a7efebacdb2ba7b74"><div class="ttname"><a href="classkeepStateData.html#ab20abe620e85e78a7efebacdb2ba7b74">keepStateData::getState</a></div><div class="ttdeci">unsigned char getState() const </div><div class="ttdoc">the getter that gets the state </div><div class="ttdef"><b>Definition:</b> transmission.cpp:137</div></div>
<div class="ttc" id="classcommandData_html_aa898fb11788690c24d9f0cde8aa8ab1a"><div class="ttname"><a href="classcommandData.html#aa898fb11788690c24d9f0cde8aa8ab1a">commandData::getLength</a></div><div class="ttdeci">unsigned char getLength() const </div><div class="ttdoc">see super class </div><div class="ttdef"><b>Definition:</b> transmission.cpp:207</div></div>
<div class="ttc" id="classpacketBuffer_html_a0b809917ab3a8c67c32c2c3748afd865"><div class="ttname"><a href="classpacketBuffer.html#a0b809917ab3a8c67c32c2c3748afd865">packetBuffer::interpretRawData</a></div><div class="ttdeci">transmissionPacket interpretRawData(const unsigned char *packet)</div><div class="ttdoc">convert raw bytes into a transmissionPacket which needs to be processed further, this is first step ...</div><div class="ttdef"><b>Definition:</b> transmission.cpp:365</div></div>
<div class="ttc" id="classsensorData_html_af7cfb2850123ed74e8ec38e3c7a36c80"><div class="ttname"><a href="classsensorData.html#af7cfb2850123ed74e8ec38e3c7a36c80">sensorData::getLength</a></div><div class="ttdeci">unsigned char getLength() const </div><div class="ttdoc">see super class </div><div class="ttdef"><b>Definition:</b> transmission.cpp:320</div></div>
<div class="ttc" id="classcommandData_html_affd38cebd2bfe2485aecf552201d810e"><div class="ttname"><a href="classcommandData.html#affd38cebd2bfe2485aecf552201d810e">commandData::operator==</a></div><div class="ttdeci">bool operator==(const commandData &amp;src)</div><div class="ttdoc">comparison operator </div><div class="ttdef"><b>Definition:</b> transmission.cpp:180</div></div>
<div class="ttc" id="classkeepStateData_html_ae82574aa79079018c68423ceba1b0ebe"><div class="ttname"><a href="classkeepStateData.html#ae82574aa79079018c68423ceba1b0ebe">keepStateData::getSequence</a></div><div class="ttdeci">unsigned char getSequence() const </div><div class="ttdoc">the getter that gets the sequence </div><div class="ttdef"><b>Definition:</b> transmission.cpp:145</div></div>
<div class="ttc" id="classtransmissionPacket_html_addb25c2a8297115224d3b229e558c7a4"><div class="ttname"><a href="classtransmissionPacket.html#addb25c2a8297115224d3b229e558c7a4">transmissionPacket::setData</a></div><div class="ttdeci">void setData(transmissionData &amp;data)</div><div class="ttdoc">the function that includes the transmission datagram into this object. </div><div class="ttdef"><b>Definition:</b> transmission.cpp:58</div></div>
<div class="ttc" id="classsensorData_html_a43ea2bc62a61d8a87efa5084222b6f94"><div class="ttname"><a href="classsensorData.html#a43ea2bc62a61d8a87efa5084222b6f94">sensorData::sensorData</a></div><div class="ttdeci">sensorData()</div><div class="ttdoc">default ctor </div><div class="ttdef"><b>Definition:</b> transmission.cpp:214</div></div>
<div class="ttc" id="classcommandData_html"><div class="ttname"><a href="classcommandData.html">commandData</a></div><div class="ttdoc">the commandData datagram the command data datagram is the datagram that includes data of instruction ...</div><div class="ttdef"><b>Definition:</b> transmission.h:180</div></div>
<div class="ttc" id="classtransmissionData_html_aa55e32f366c4274bcd40fd8e6741ad96"><div class="ttname"><a href="classtransmissionData.html#aa55e32f366c4274bcd40fd8e6741ad96">transmissionData::~transmissionData</a></div><div class="ttdeci">virtual ~transmissionData()</div><div class="ttdoc">does nothing </div><div class="ttdef"><b>Definition:</b> transmission.cpp:105</div></div>
<div class="ttc" id="classtransmissionPacket_html_a3d09ff438c9445ecd4ec34da09d7d0ab"><div class="ttname"><a href="classtransmissionPacket.html#a3d09ff438c9445ecd4ec34da09d7d0ab">transmissionPacket::transmissionPacket</a></div><div class="ttdeci">transmissionPacket()</div><div class="ttdoc">default constructor, init members </div><div class="ttdef"><b>Definition:</b> transmission.cpp:11</div></div>
<div class="ttc" id="classkeepStateData_html_ac56b710feb9018b857064081d6605526"><div class="ttname"><a href="classkeepStateData.html#ac56b710feb9018b857064081d6605526">keepStateData::toPacket</a></div><div class="ttdeci">const unsigned char * toPacket()</div><div class="ttdoc">see super class </div><div class="ttdef"><b>Definition:</b> transmission.cpp:149</div></div>
<div class="ttc" id="classinterpreter_html_ac515fd65121fb1fad75704d722e40d1e"><div class="ttname"><a href="classinterpreter.html#ac515fd65121fb1fad75704d722e40d1e">interpreter::interpretSensData</a></div><div class="ttdeci">static sensorData interpretSensData(const transmissionPacket &amp;tp)</div><div class="ttdoc">To convert from the transmission packet to a sensorData datagram. </div><div class="ttdef"><b>Definition:</b> transmission.cpp:340</div></div>
<div class="ttc" id="classsensorData_html_a9ccb58cc800a598c3d10e09550d3e1df"><div class="ttname"><a href="classsensorData.html#a9ccb58cc800a598c3d10e09550d3e1df">sensorData::getSensors</a></div><div class="ttdeci">const sensorInfo * getSensors() const </div><div class="ttdoc">gets all the sensor data added </div><div class="ttdef"><b>Definition:</b> transmission.cpp:301</div></div>
<div class="ttc" id="classkeepStateData_html_a5e777ed84928e6dcdbb508732ef4284a"><div class="ttname"><a href="classkeepStateData.html#a5e777ed84928e6dcdbb508732ef4284a">keepStateData::getLength</a></div><div class="ttdeci">unsigned char getLength() const </div><div class="ttdoc">see super class </div><div class="ttdef"><b>Definition:</b> transmission.cpp:156</div></div>
<div class="ttc" id="classsensorData_html_af0b04d0861972b8fe829850374f20f00"><div class="ttname"><a href="classsensorData.html#af0b04d0861972b8fe829850374f20f00">sensorData::toPacket</a></div><div class="ttdeci">const unsigned char * toPacket()</div><div class="ttdoc">see super class </div><div class="ttdef"><b>Definition:</b> transmission.cpp:305</div></div>
<div class="ttc" id="classsensorData_html_a6b5e8d1467b390fd41a707667ec28bf2"><div class="ttname"><a href="classsensorData.html#a6b5e8d1467b390fd41a707667ec28bf2">sensorData::operator=</a></div><div class="ttdeci">sensorData &amp; operator=(const sensorData &amp;src)</div><div class="ttdoc">assignment operator </div><div class="ttdef"><b>Definition:</b> transmission.cpp:251</div></div>
<div class="ttc" id="classsensorData_html_aab2d3c517b2130b076f1bff605b074a4"><div class="ttname"><a href="classsensorData.html#aab2d3c517b2130b076f1bff605b074a4">sensorData::getSensorNum</a></div><div class="ttdeci">unsigned char getSensorNum() const </div><div class="ttdoc">gets the number of sensor added </div><div class="ttdef"><b>Definition:</b> transmission.cpp:288</div></div>
<div class="ttc" id="classsensorData_html_aa41c2fb97e25f2e8476cbee6b728abca"><div class="ttname"><a href="classsensorData.html#aa41c2fb97e25f2e8476cbee6b728abca">sensorData::~sensorData</a></div><div class="ttdeci">~sensorData()</div><div class="ttdoc">free the memory </div><div class="ttdef"><b>Definition:</b> transmission.cpp:326</div></div>
<div class="ttc" id="classtransmissionPacket_html_aa4dd4a99956e6a3078d19bdca005e4b3"><div class="ttname"><a href="classtransmissionPacket.html#aa4dd4a99956e6a3078d19bdca005e4b3">transmissionPacket::setMessageLength</a></div><div class="ttdeci">void setMessageLength(const unsigned char length)</div><div class="ttdoc">the setter that set the data length, use setData if possible </div><div class="ttdef"><b>Definition:</b> transmission.cpp:99</div></div>
<div class="ttc" id="classcommandData_html_a6534c472a44fe8ff787ea3772d9bab11"><div class="ttname"><a href="classcommandData.html#a6534c472a44fe8ff787ea3772d9bab11">commandData::toPacket</a></div><div class="ttdeci">const unsigned char * toPacket()</div><div class="ttdoc">see super class </div><div class="ttdef"><b>Definition:</b> transmission.cpp:200</div></div>
<div class="ttc" id="classcommandData_html_a053044a9996f03e001125ea479b32ec5"><div class="ttname"><a href="classcommandData.html#a053044a9996f03e001125ea479b32ec5">commandData::getParameter</a></div><div class="ttdeci">unsigned char getParameter() const </div><div class="ttdoc">gets the parameter field </div><div class="ttdef"><b>Definition:</b> transmission.cpp:196</div></div>
<div class="ttc" id="classsensorData_html_a6cdb280bf5743c694249d69ee831f3d4"><div class="ttname"><a href="classsensorData.html#a6cdb280bf5743c694249d69ee831f3d4">sensorData::addSensor</a></div><div class="ttdeci">void addSensor(const sensorInfo &amp;data)</div><div class="ttdoc">adds a sensor data to the datagram  the new sensor data </div><div class="ttdef"><b>Definition:</b> transmission.cpp:292</div></div>
<div class="ttc" id="classkeepStateData_html_acff5898677f0bc2c6dd3b2e52fc1af28"><div class="ttname"><a href="classkeepStateData.html#acff5898677f0bc2c6dd3b2e52fc1af28">keepStateData::setSequence</a></div><div class="ttdeci">void setSequence(const unsigned char sequence)</div><div class="ttdoc">the setter that sets the sequence which should with each packet </div><div class="ttdef"><b>Definition:</b> transmission.cpp:141</div></div>
<div class="ttc" id="classtransmissionPacket_html"><div class="ttname"><a href="classtransmissionPacket.html">transmissionPacket</a></div><div class="ttdoc">The transmission meta packet The meta packet to be send that includes transmissionData. </div><div class="ttdef"><b>Definition:</b> transmission.h:41</div></div>
<div class="ttc" id="classcommandData_html_ae85e0bef520a7111cf744e9524b493bd"><div class="ttname"><a href="classcommandData.html#ae85e0bef520a7111cf744e9524b493bd">commandData::setParameter</a></div><div class="ttdeci">void setParameter(const unsigned char param)</div><div class="ttdoc">sets the parameter for the command, set to 0 if none </div><div class="ttdef"><b>Definition:</b> transmission.cpp:192</div></div>
<div class="ttc" id="classtransmissionData_html"><div class="ttname"><a href="classtransmissionData.html">transmissionData</a></div><div class="ttdoc">the transmissionData abstract class The datagram of the transmission protocol, it is encapsulated wit...</div><div class="ttdef"><b>Definition:</b> transmission.h:19</div></div>
<div class="ttc" id="classtransmissionPacket_html_aa045bdb41e7aa7f79f95f71e531867ce"><div class="ttname"><a href="classtransmissionPacket.html#aa045bdb41e7aa7f79f95f71e531867ce">transmissionPacket::getData</a></div><div class="ttdeci">const unsigned char * getData() const </div><div class="ttdoc">getter that returns the raw byte data portion </div><div class="ttdef"><b>Definition:</b> transmission.cpp:95</div></div>
<div class="ttc" id="classcommandData_html_a2228dd04ac097ddaa8ff8f3d9bf4fedd"><div class="ttname"><a href="classcommandData.html#a2228dd04ac097ddaa8ff8f3d9bf4fedd">commandData::operator=</a></div><div class="ttdeci">commandData &amp; operator=(const commandData &amp;src)</div><div class="ttdoc">assignment operator </div><div class="ttdef"><b>Definition:</b> transmission.cpp:174</div></div>
<div class="ttc" id="classsensorData_html_aacea3e817ae9b69b635271562fa483da"><div class="ttname"><a href="classsensorData.html#aacea3e817ae9b69b635271562fa483da">sensorData::operator==</a></div><div class="ttdeci">bool operator==(const sensorData &amp;src)</div><div class="ttdoc">comparison operator </div><div class="ttdef"><b>Definition:</b> transmission.cpp:263</div></div>
<div class="ttc" id="classcommandData_html_ad005bd06513576028c35abcce0b8b259"><div class="ttname"><a href="classcommandData.html#ad005bd06513576028c35abcce0b8b259">commandData::setCommand</a></div><div class="ttdeci">void setCommand(const unsigned char command)</div><div class="ttdoc">sets the command field, which identifies the command. </div><div class="ttdef"><b>Definition:</b> transmission.cpp:184</div></div>
<div class="ttc" id="classcommandData_html_aacca8b4fd00b3da4e0ecf7497aaea2a8"><div class="ttname"><a href="classcommandData.html#aacca8b4fd00b3da4e0ecf7497aaea2a8">commandData::commandData</a></div><div class="ttdeci">commandData()</div><div class="ttdoc">default ctor </div><div class="ttdef"><b>Definition:</b> transmission.cpp:164</div></div>
<div class="ttc" id="classtransmissionPacket_html_a2bac62071baef91a910f71292119f944"><div class="ttname"><a href="classtransmissionPacket.html#a2bac62071baef91a910f71292119f944">transmissionPacket::getLength</a></div><div class="ttdeci">unsigned char getLength() const </div><div class="ttdoc">the getter that returns the message length(only the data portion), plus 2 to get the whole length ...</div><div class="ttdef"><b>Definition:</b> transmission.cpp:54</div></div>
<div class="ttc" id="classcommandData_html_a24cb5a2d0e8b0212142d0c6e8469d2c4"><div class="ttname"><a href="classcommandData.html#a24cb5a2d0e8b0212142d0c6e8469d2c4">commandData::getCommand</a></div><div class="ttdeci">unsigned char getCommand() const </div><div class="ttdoc">gets the command field </div><div class="ttdef"><b>Definition:</b> transmission.cpp:188</div></div>
<div class="ttc" id="classsensorData_html"><div class="ttname"><a href="classsensorData.html">sensorData</a></div><div class="ttdoc">the sensor data datagram the sensor data datagram which the arduino sends to roborio constantly ...</div><div class="ttdef"><b>Definition:</b> transmission.h:252</div></div>
<div class="ttc" id="classtransmissionData_html_a4fc9dc1efe482dbf3bf8cbda2137a3d8"><div class="ttname"><a href="classtransmissionData.html#a4fc9dc1efe482dbf3bf8cbda2137a3d8">transmissionData::getLength</a></div><div class="ttdeci">virtual unsigned char getLength() const =0</div><div class="ttdoc">an getter that access the length of the datagram </div></div>
<div class="ttc" id="classkeepStateData_html"><div class="ttname"><a href="classkeepStateData.html">keepStateData</a></div><div class="ttdoc">the keepStateData datagram the keepStateData datagram is the keep-alive message sent from the roborio...</div><div class="ttdef"><b>Definition:</b> transmission.h:118</div></div>
<div class="ttc" id="classtransmissionPacket_html_a4ea135da255bde628ed9d767850308da"><div class="ttname"><a href="classtransmissionPacket.html#a4ea135da255bde628ed9d767850308da">transmissionPacket::toPacket</a></div><div class="ttdeci">unsigned char * toPacket() const </div><div class="ttdoc">generates the packet as bytes, free them after using them to avoid leak. </div><div class="ttdef"><b>Definition:</b> transmission.cpp:79</div></div>
<div class="ttc" id="classsensorData_html_af95f327facc5ffdb04ec2a6f7488a4a8"><div class="ttname"><a href="classsensorData.html#af95f327facc5ffdb04ec2a6f7488a4a8">sensorData::setArduinoStat</a></div><div class="ttdeci">void setArduinoStat(const unsigned char stat)</div><div class="ttdoc">sets the status of arduino in the datagram, 0 for error, 1 for good </div><div class="ttdef"><b>Definition:</b> transmission.cpp:280</div></div>
<div class="ttc" id="classtransmissionPacket_html_aaf57e80cee2a9a6632f21bec6e791617"><div class="ttname"><a href="classtransmissionPacket.html#aaf57e80cee2a9a6632f21bec6e791617">transmissionPacket::setMessageType</a></div><div class="ttdeci">void setMessageType(const unsigned char t)</div><div class="ttdoc">setter that set the message type </div><div class="ttdef"><b>Definition:</b> transmission.cpp:46</div></div>
<div class="ttc" id="classsensorData_html_aebe763d26ab02c01e5b7eb3f9a35c8eb"><div class="ttname"><a href="classsensorData.html#aebe763d26ab02c01e5b7eb3f9a35c8eb">sensorData::getArduinoStat</a></div><div class="ttdeci">unsigned char getArduinoStat() const </div><div class="ttdoc">gets the status of arduino </div><div class="ttdef"><b>Definition:</b> transmission.cpp:284</div></div>
<div class="ttc" id="classpacketBuffer_html"><div class="ttname"><a href="classpacketBuffer.html">packetBuffer</a></div><div class="ttdef"><b>Definition:</b> transmission.h:346</div></div>
<div class="ttc" id="classkeepStateData_html_ad90d41e7caa04816ec18d4055fb830f8"><div class="ttname"><a href="classkeepStateData.html#ad90d41e7caa04816ec18d4055fb830f8">keepStateData::operator==</a></div><div class="ttdeci">bool operator==(const keepStateData &amp;src)</div><div class="ttdoc">comparison operator </div><div class="ttdef"><b>Definition:</b> transmission.cpp:129</div></div>
<div class="ttc" id="classinterpreter_html_a110be33f28724855a75f274e45618276"><div class="ttname"><a href="classinterpreter.html#a110be33f28724855a75f274e45618276">interpreter::interpretCommandData</a></div><div class="ttdeci">static commandData interpretCommandData(const transmissionPacket &amp;tp)</div><div class="ttdoc">To convert from the transmission packet to a commandData. </div><div class="ttdef"><b>Definition:</b> transmission.cpp:354</div></div>
<div class="ttc" id="classkeepStateData_html_a67fab4cc21ddb47be8410d29d84f9c36"><div class="ttname"><a href="classkeepStateData.html#a67fab4cc21ddb47be8410d29d84f9c36">keepStateData::setState</a></div><div class="ttdeci">void setState(const unsigned char state)</div><div class="ttdoc">set the state field of the datagram, 0 for auto, 1 for tele, 2 for test </div><div class="ttdef"><b>Definition:</b> transmission.cpp:133</div></div>
<div class="ttc" id="classtransmissionPacket_html_a1b2b7b416601545c898b8ca6fec4fbb2"><div class="ttname"><a href="classtransmissionPacket.html#a1b2b7b416601545c898b8ca6fec4fbb2">transmissionPacket::getMessageType</a></div><div class="ttdeci">unsigned char getMessageType() const </div><div class="ttdoc">the getter that returns the message type </div><div class="ttdef"><b>Definition:</b> transmission.cpp:50</div></div>
<div class="ttc" id="classkeepStateData_html_a97b2505d968f9ad8a36ccd821cb17380"><div class="ttname"><a href="classkeepStateData.html#a97b2505d968f9ad8a36ccd821cb17380">keepStateData::keepStateData</a></div><div class="ttdeci">keepStateData()</div><div class="ttdoc">default ctor </div><div class="ttdef"><b>Definition:</b> transmission.cpp:113</div></div>
<div class="ttc" id="classinterpreter_html_a19de2dbbdff62b94424310f49e952ba3"><div class="ttname"><a href="classinterpreter.html#a19de2dbbdff62b94424310f49e952ba3">interpreter::interpretStatSeq</a></div><div class="ttdeci">static keepStateData interpretStatSeq(const transmissionPacket &amp;tp)</div><div class="ttdoc">To convert from the transmission packet to a keepState datagram,. </div><div class="ttdef"><b>Definition:</b> transmission.cpp:334</div></div>
<div class="ttc" id="classtransmissionPacket_html_a351e609577ac9baaa5c04bd5bb815ee5"><div class="ttname"><a href="classtransmissionPacket.html#a351e609577ac9baaa5c04bd5bb815ee5">transmissionPacket::~transmissionPacket</a></div><div class="ttdeci">~transmissionPacket()</div><div class="ttdoc">frees the memory </div><div class="ttdef"><b>Definition:</b> transmission.cpp:26</div></div>
<div class="ttc" id="classinterpreter_html"><div class="ttname"><a href="classinterpreter.html">interpreter</a></div><div class="ttdef"><b>Definition:</b> transmission.h:323</div></div>
<div class="ttc" id="classkeepStateData_html_a9ead812a2543c35f36c3c35af4aabe75"><div class="ttname"><a href="classkeepStateData.html#a9ead812a2543c35f36c3c35af4aabe75">keepStateData::operator=</a></div><div class="ttdeci">keepStateData &amp; operator=(const keepStateData &amp;src)</div><div class="ttdoc">assignment operator </div><div class="ttdef"><b>Definition:</b> transmission.cpp:123</div></div>
<div class="ttc" id="classtransmissionPacket_html_aa4a40b8255162e01bd5f8e187a615984"><div class="ttname"><a href="classtransmissionPacket.html#aa4a40b8255162e01bd5f8e187a615984">transmissionPacket::operator=</a></div><div class="ttdeci">transmissionPacket &amp; operator=(const transmissionPacket &amp;src)</div><div class="ttdoc">assignment operator that clear this object, and copy over data from src </div><div class="ttdef"><b>Definition:</b> transmission.cpp:32</div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.5
</small></address>
</body>
</html>
