package net.viperfish.ticketServer;

import java.io.IOException;
import java.net.Socket;

public class Client implements Runnable {
	protected static int currentID;
	protected Socket sock;
	protected int id;
	public Client(Socket sock) {
		this.sock = sock;
		id = currentID;
		currentID= currentID+1;
	}
	
	public boolean reportError(Error e) {
		try {
			sock.getOutputStream().write(("Error:" + e.toString()).getBytes());
		} catch (IOException e1) {
			return false;
		}
		return true;
		
	}
	
	public boolean sendTicket(Ticket t) {
		try {
			sock.getOutputStream().write(("Ticket:" + t.toString()).getBytes());
		} catch (IOException e) {
			return false;
		}
		return true;
	}
	
	public boolean pushCurrent(int num) {
		try {
			sock.getOutputStream().write(("Current:" + num).getBytes());
		} catch (IOException e) {
			return false;
		}
		return true;
	}

	public int getID() {
		return id;
	}
	
	@Override
	public void run() {
		String request;
		String[] buffer;
		String action;
		byte[] income = new byte[2048];
		int status = 0;
		while(!Thread.interrupted()) {
			try {
				status = sock.getInputStream().read(income);
			} catch (IOException e) {
				TicketHandler.unSubscribe(this.id);
			}
			if(status == -1) {
				TicketHandler.unSubscribe(this.id);
			}
			request = new String(income);
			buffer = request.split(":");
			if(buffer.length != 2) {
				continue;
			}
			else {
				action = buffer[0];
				buffer = buffer[1].split(";");
				if(action.equals("GetTicket")) {
					if(!sendTicket(TicketHandler.getTicket())) {
						TicketHandler.unSubscribe(this.id);
					}
				}
				if(action.equals("Done")) {
					if(buffer.length != 1) {
						continue;
					}
					TicketHandler.done(buffer[0]);
				}
			}
			
		}
		
	}
}
